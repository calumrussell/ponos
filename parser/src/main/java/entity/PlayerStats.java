package entity;

import com.fasterxml.jackson.databind.PropertyNamingStrategies;
import com.fasterxml.jackson.databind.annotation.JsonNaming;
import match.MatchWrapper;

import java.util.HashMap;

@JsonNaming(PropertyNamingStrategies.SnakeCaseStrategy.class)
public class PlayerStats {
    public Integer playerId;
    public Integer teamId;
    public Integer matchId;
    public short minutes;
    public short pass;
    public short passCorner;
    public short passLongball;
    public short passCross;
    public short passBack;
    public short passForward;
    public short passLeft;
    public short passRight;
    public short passShort;
    public short passThroughball;
    public short passAccurate;
    public short passShortAccurate;
    public short passCornerAccurate;
    public short passLongballAccurate;
    public short passCrossAccurate;
    public short passThroughballAccurate;
    public short passKey;
    public short passKeyCross;
    public short passKeyFreekick;
    public short passKeyCorner;
    public short passKeyThroughball;
    public short shot;
    public short shotOnTarget;
    public short shotOffTarget;
    public short shotBlocked;
    public short shotOpenPlay;
    public short shotSetPiece;
    public short shotOnPost;
    public short shotSixYardBox;
    public short shotPenaltyArea;
    public short shotBox;
    public short shotCounter;
    public short shotHead;
    public short shotFoot;
    public short shot0bp;
    public short goal;
    public short goalNormal;
    public short goalHead;
    public short goalFoot;
    public short goalSetPiece;
    public short goalOwn;
    public short goalCounter;
    public short goalOpenPlay;
    public short goal0bp;
    public short goal0box;
    public short goalSixYardBox;
    public short goalPenaltyArea;
    public short assist;
    public short assistCross;
    public short assistCorner;
    public short assistThroughball;
    public short aerialDuel;
    public short redCard;
    public short yellowCard;
    public short secondYellowCard;
    public short save;
    public short duel;
    public short duelOffensive;
    public short duelDefensive;
    public short dispossessed;
    public short turnover;
    public short dribble;
    public short dribbleWon;
    public short dribbleLost;
    public short dribbleLastMan;
    public short challengeLost;
    public short blockedCross;
    public short blockOutfielder;
    public short blockSixYard;
    public short blockPassOutfielder;
    public short interception;
    public short interceptionWon;
    public short interceptionInBox;
    public short tackle;
    public short tackleWon;
    public short tackleLost;
    public short tackleLastMan;
    public short offsideGiven;
    public short offsideProvoked;
    public short ballRecovery;
    public short clearance;
    public short clearanceEffective;
    public short clearanceOffLine;
    public short errorLeadsToGoal;
    public short errorLeadsToShot;
    public short touch;
    public short penaltyWon;
    public short penaltyConceded;
    public short penaltyScored;
    public short bigChanceMissed;
    public short bigChanceScored;
    public short bigChanceCreated;
    public short parriedSafe;
    public short parriedDanger;
    public short saveKeeper;

    public PlayerStats(Integer playerId, Integer teamId, MatchWrapper matchWrapper) {
        this.playerId = playerId;
        this.teamId = teamId;
        this.matchId = matchWrapper.getMatchId();;
        //This needs to fail on missing values as it will indicate an error somewhere in the code
        this.minutes = matchWrapper.playerMinutes.get(playerId).shortValue();
        //This can return zero if the player was a substitute but we need to record that they played the game
        this.pass = matchWrapper.passMap.getOrDefault(playerId, 0).shortValue();
        this.passCorner = matchWrapper.passCornerMap.getOrDefault(playerId, 0).shortValue();
        this.passLongball = matchWrapper.passLongballMap.getOrDefault(playerId, 0).shortValue();
        this.passCross = matchWrapper.passCrossMap.getOrDefault(playerId, 0).shortValue();
        this.passBack = matchWrapper.passBackMap.getOrDefault(playerId, 0).shortValue();
        this.passForward = matchWrapper.passForwardMap.getOrDefault(playerId, 0).shortValue();
        this.passLeft = matchWrapper.passLeftMap.getOrDefault(playerId, 0).shortValue();
        this.passRight = matchWrapper.passRightMap.getOrDefault(playerId, 0).shortValue();
        this.passShort = matchWrapper.passShortMap.getOrDefault(playerId, 0).shortValue();
        this.passThroughball = matchWrapper.passThroughballMap.getOrDefault(playerId, 0).shortValue();
        this.passAccurate = matchWrapper.passAccurateMap.getOrDefault(playerId, 0).shortValue();
        this.passShortAccurate = matchWrapper.passShortAccurateMap.getOrDefault(playerId, 0).shortValue();
        this.passCornerAccurate = matchWrapper.passCornerAccurateMap.getOrDefault(playerId, 0).shortValue();
        this.passLongballAccurate = matchWrapper.passLongballAccurateMap.getOrDefault(playerId, 0).shortValue();
        this.passCrossAccurate = matchWrapper.passCrossAccurateMap.getOrDefault(playerId, 0).shortValue();
        this.passThroughballAccurate = matchWrapper.passThroughballAccurateMap.getOrDefault(playerId, 0).shortValue();
        this.passKey = matchWrapper.passKeyMap.getOrDefault(playerId, 0).shortValue();
        this.passKeyCross = matchWrapper.passKeyCrossMap.getOrDefault(playerId, 0).shortValue();
        this.passKeyFreekick = matchWrapper.passKeyFreekickMap.getOrDefault(playerId, 0).shortValue();
        this.passKeyCorner = matchWrapper.passKeyCornerMap.getOrDefault(playerId, 0).shortValue();
        this.passKeyThroughball = matchWrapper.passKeyThroughballMap.getOrDefault(playerId, 0).shortValue();
        this.shot = matchWrapper.shotMap.getOrDefault(playerId, 0).shortValue();
        this.shotOnTarget = matchWrapper.shotOnTargetMap.getOrDefault(playerId, 0).shortValue();
        this.shotOffTarget = matchWrapper.shotOffTargetMap.getOrDefault(playerId, 0).shortValue();
        this.shotBlocked = matchWrapper.shotBlockedMap.getOrDefault(playerId, 0).shortValue();
        this.shotOpenPlay = matchWrapper.shotOpenPlayMap.getOrDefault(playerId, 0).shortValue();
        this.shotSetPiece = matchWrapper.shotSetPieceMap.getOrDefault(playerId, 0).shortValue();
        this.shotOnPost = matchWrapper.shotOnPostMap.getOrDefault(playerId, 0).shortValue();
        this.shotSixYardBox = matchWrapper.shotSixYardBoxMap.getOrDefault(playerId, 0).shortValue();
        this.shotPenaltyArea = matchWrapper.shotPenaltyAreaMap.getOrDefault(playerId, 0).shortValue();
        this.shotBox = matchWrapper.shotBoxMap.getOrDefault(playerId, 0).shortValue();
        this.shotCounter = matchWrapper.shotCounterMap.getOrDefault(playerId, 0).shortValue();
        this.shotHead = matchWrapper.shotHeadMap.getOrDefault(playerId, 0).shortValue();
        this.shotFoot = matchWrapper.shotFootMap.getOrDefault(playerId, 0).shortValue();
        this.shot0bp = matchWrapper.shot0bpMap.getOrDefault(playerId, 0).shortValue();
        this.goal = matchWrapper.goalMap.getOrDefault(playerId, 0).shortValue();
        this.goalNormal = matchWrapper.goalNormalMap.getOrDefault(playerId, 0).shortValue();
        this.goalHead = matchWrapper.goalHeadMap.getOrDefault(playerId, 0).shortValue();
        this.goalFoot = matchWrapper.goalFootMap.getOrDefault(playerId, 0).shortValue();
        this.goalSetPiece = matchWrapper.goalSetPieceMap.getOrDefault(playerId, 0).shortValue();
        this.goalOwn = matchWrapper.goalOwnMap.getOrDefault(playerId, 0).shortValue();
        this.goalCounter = matchWrapper.goalCounterMap.getOrDefault(playerId, 0).shortValue();
        this.goalOpenPlay = matchWrapper.goalOpenPlayMap.getOrDefault(playerId, 0).shortValue();
        this.goal0bp = matchWrapper.goal0bpMap.getOrDefault(playerId, 0).shortValue();
        this.goal0box = matchWrapper.goal0boxMap.getOrDefault(playerId, 0).shortValue();
        this.goalSixYardBox = matchWrapper.goalSixYardBoxMap.getOrDefault(playerId, 0).shortValue();
        this.goalPenaltyArea = matchWrapper.goalPenaltyAreaMap.getOrDefault(playerId, 0).shortValue();
        this.assist = matchWrapper.assistMap.getOrDefault(playerId, 0).shortValue();
        this.assistCross = matchWrapper.assistCrossMap.getOrDefault(playerId, 0).shortValue();
        this.assistCorner = matchWrapper.assistCornerMap.getOrDefault(playerId, 0).shortValue();
        this.assistThroughball = matchWrapper.assistThroughballMap.getOrDefault(playerId, 0).shortValue();
        this.aerialDuel = matchWrapper.aerialDuelMap.getOrDefault(playerId, 0).shortValue();
        this.redCard = matchWrapper.redCardMap.getOrDefault(playerId, 0).shortValue();
        this.yellowCard = matchWrapper.yellowCardMap.getOrDefault(playerId, 0).shortValue();
        this.secondYellowCard = matchWrapper.secondYellowCardMap.getOrDefault(playerId, 0).shortValue();
        this.save = matchWrapper.saveMap.getOrDefault(playerId, 0).shortValue();
        this.duel = matchWrapper.duelMap.getOrDefault(playerId, 0).shortValue();
        this.duelOffensive = matchWrapper.duelOffensiveMap.getOrDefault(playerId, 0).shortValue();
        this.duelDefensive = matchWrapper.duelDefensiveMap.getOrDefault(playerId, 0).shortValue();
        this.dispossessed = matchWrapper.dispossessedMap.getOrDefault(playerId, 0).shortValue();
        this.turnover = matchWrapper.turnoverMap.getOrDefault(playerId, 0).shortValue();
        this.dribble = matchWrapper.dribbleMap.getOrDefault(playerId, 0).shortValue();
        this.dribbleWon = matchWrapper.dribbleWonMap.getOrDefault(playerId, 0).shortValue();
        this.dribbleLost = matchWrapper.dribbleLostMap.getOrDefault(playerId, 0).shortValue();
        this.dribbleLastMan = matchWrapper.dribbleLastManMap.getOrDefault(playerId, 0).shortValue();
        this.challengeLost = matchWrapper.challengeLostMap.getOrDefault(playerId, 0).shortValue();
        this.blockedCross = matchWrapper.blockedCrossMap.getOrDefault(playerId, 0).shortValue();
        this.blockOutfielder = matchWrapper.blockOutfielderMap.getOrDefault(playerId, 0).shortValue();
        this.blockSixYard = matchWrapper.blockSixYardMap.getOrDefault(playerId, 0).shortValue();
        this.blockPassOutfielder = matchWrapper.blockPassOutfielderMap.getOrDefault(playerId, 0).shortValue();
        this.interception = matchWrapper.interceptionMap.getOrDefault(playerId, 0).shortValue();
        this.interceptionWon = matchWrapper.interceptionWonMap.getOrDefault(playerId, 0).shortValue();
        this.interceptionInBox = matchWrapper.interceptionInBoxMap.getOrDefault(playerId, 0).shortValue();
        this.tackle = matchWrapper.tackleMap.getOrDefault(playerId, 0).shortValue();
        this.tackleWon = matchWrapper.tackleWonMap.getOrDefault(playerId, 0).shortValue();
        this.tackleLost = matchWrapper.tackleLostMap.getOrDefault(playerId, 0).shortValue();
        this.tackleLastMan = matchWrapper.tackleLastManMap.getOrDefault(playerId, 0).shortValue();
        this.offsideGiven = matchWrapper.offsideGivenMap.getOrDefault(playerId, 0).shortValue();
        this.offsideProvoked = matchWrapper.offsideProvokedMap.getOrDefault(playerId, 0).shortValue();
        this.ballRecovery = matchWrapper.ballRecoveryMap.getOrDefault(playerId, 0).shortValue();
        this.clearance = matchWrapper.clearanceMap.getOrDefault(playerId, 0).shortValue();
        this.clearanceEffective = matchWrapper.clearanceEffectiveMap.getOrDefault(playerId, 0).shortValue();
        this.clearanceOffLine = matchWrapper.clearanceOffLineMap.getOrDefault(playerId, 0).shortValue();
        this.errorLeadsToGoal = matchWrapper.errorLeadsToGoalMap.getOrDefault(playerId, 0).shortValue();
        this.errorLeadsToShot = matchWrapper.errorLeadsToShotMap.getOrDefault(playerId, 0).shortValue();
        this.touch = matchWrapper.touchMap.getOrDefault(playerId, 0).shortValue();
        this.penaltyWon = matchWrapper.penaltyWonMap.getOrDefault(playerId, 0).shortValue();
        this.penaltyConceded = matchWrapper.penaltyConcededMap.getOrDefault(playerId, 0).shortValue();
        this.penaltyScored = matchWrapper.penaltyScoredMap.getOrDefault(playerId, 0).shortValue();
        this.bigChanceMissed = matchWrapper.bigChanceMissedMap.getOrDefault(playerId, 0).shortValue();
        this.bigChanceScored = matchWrapper.bigChanceScoredMap.getOrDefault(playerId, 0).shortValue();
        this.bigChanceCreated = matchWrapper.bigChanceCreatedMap.getOrDefault(playerId, 0).shortValue();
        this.parriedSafe = matchWrapper.parriedSafeMap.getOrDefault(playerId, 0).shortValue();
        this.parriedDanger = matchWrapper.parriedDangerMap.getOrDefault(playerId, 0).shortValue();
        this.saveKeeper = matchWrapper.saveKeeperMap.getOrDefault(playerId, 0).shortValue();
    }
}
