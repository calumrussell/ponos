{{ 
    config(
        materialized='view',
        indexes = [
            {'columns': ['team_id', 'match_id'], 'unique': True},
        ],
    ) 
}}

{% set stat_groups = [
    "pass",
    "pass_corner",
    "pass_longball",
    "pass_cross",
    "pass_back",
    "pass_forward",
    "pass_left",
    "pass_right",
    "pass_short",
    "pass_throughball",
    "pass_accurate",
    "pass_short_accurate",
    "pass_corner_accurate",
    "pass_longball_accurate",
    "pass_cross_accurate",
    "pass_throughball_accurate",
    "pass_key",
    "pass_key_cross",
    "pass_key_freekick",
    "pass_key_corner",
    "pass_key_throughball",
    "shot",
    "shot_on_target",
    "shot_off_target",
    "shot_blocked",
    "shot_open_play",
    "shot_set_piece",
    "shot_on_post",
    "shot_six_yard_box",
    "shot_penalty_area",
    "shot_box",
    "shot_counter",
    "shot_head",
    "shot_foot",
    "shot_0bp",
    "goal",
    "goal_normal",
    "goal_head",
    "goal_foot",
    "goal_set_piece",
    "goal_own",
    "goal_counter",
    "goal_open_play",
    "goal_0bp",
    "goal_0box",
    "goal_six_yard_box",
    "goal_penalty_area",
    "assist",
    "assist_cross",
    "assist_corner",
    "assist_throughball",
    "aerial_duel",
    "red_card",
    "yellow_card",
    "second_yellow_card",
    "save",
    "duel",
    "duel_offensive",
    "duel_defensive",
    "dispossessed",
    "turnover",
    "dribble",
    "dribble_won",
    "dribble_lost",
    "dribble_last_man",
    "challenge_lost",
    "blocked_cross",
    "block_outfielder",
    "block_six_yard",
    "block_pass_outfielder",
    "interception",
    "interception_won",
    "interception_in_box",
    "tackle",
    "tackle_won",
    "tackle_lost",
    "tackle_last_man",
    "offside_given",
    "offside_provoked",
    "ball_recovery",
    "clearance",
    "clearance_effective",
    "clearance_off_line",
    "error_leads_to_goal",
    "error_leads_to_shot",
    "touch",
    "penalty_won",
    "penalty_conceded",
    "penalty_scored",
    "big_chance_missed",
    "big_chance_scored",
    "big_chance_created",
    "parried_safe",
    "parried_danger",
    "save_keeper"
] %}

with xg_team as (
    select sum(xg) as xg, match_id, team_id from {{ ref('player_stats_full') }} group by (match_id, team_id)
)

select 
    match.start_date,
    team_stats.team_id,
    team_stats.opp_id,
    team_stats.match_id,
    team_stats.is_home,
    {% for stat in stat_groups %}
    team_stats.{{stat}} as {{stat}},
    opp_stats.{{stat}} as opp_{{stat}},
    {% endfor %}
    team_stats.touch/opp_stats.touch as posession,
    case when team_stats.pass != 0 then team_stats.pass_accurate::real/team_stats.pass::real else 0 end as pass_accuracy,
    case when opp_stats.pass != 0 then opp_stats.pass_accurate::real/opp_stats.pass::real else 0 end as opp_pass_accuracy,
    case when team_stats.pass_short != 0 then team_stats.pass_short_accurate::real/team_stats.pass_short::real else 0 end as pass_short_accuracy,
    case when opp_stats.pass_short != 0 then opp_stats.pass_short_accurate::real/opp_stats.pass_short::real else 0 end as opp_pass_short_accuracy,
    case when team_stats.dribble != 0 then team_stats.dribble_won::real/team_stats.dribble::real else 0 end as dribble_conversion,
    case when opp_stats.dribble != 0 then opp_stats.dribble_won::real/opp_stats.dribble::real else 0 end as opp_dribble_conversion,
    case when team_stats.interception != 0 then team_stats.interception_won::real/team_stats.interception::real else 0 end as interception_conversion,
    case when opp_stats.interception != 0 then opp_stats.interception_won::real/opp_stats.interception::real else 0 end as opp_interception_conversion,
    case when team_stats.tackle != 0 then team_stats.tackle_won::real/team_stats.tackle::real else 0 end as tackle_conversion,
    case when opp_stats.tackle != 0 then opp_stats.tackle_won::real/opp_stats.tackle::real else 0 end as opp_tackle_conversion,
    case when team_stats.clearance != 0 then team_stats.clearance_effective::real/team_stats.clearance::real else 0 end as clearance_conversion,
    case when opp_stats.clearance != 0 then opp_stats.clearance_effective::real/opp_stats.clearance::real else 0 end as opp_clearance_conversion,
    case when team_stats.big_chance_created != 0 then team_stats.big_chance_scored::real/team_stats.big_chance_created::real else 0.0::real end as big_chance_conversion,
    case when opp_stats.big_chance_created != 0 then opp_stats.big_chance_scored::real/opp_stats.big_chance_created::real else 0.0::real end as opp_big_chance_conversion,
    CASE WHEN xg_team.xg is NULL THEN 0 ELSE xg_team.xg END AS xg,
    team.name as team,
    opp.name as opp,
    match.year,
    tournament.name as tournament
from team_stats 
left join team_stats as opp_stats on team_stats.team_id=opp_stats.opp_id and team_stats.match_id=opp_stats.match_id
left join team on team.id=team_stats.team_id
left join team as opp on opp.id=team_stats.opp_id
left join match on team_stats.match_id=match.id
left join xg_team on xg_team.team_id=team_stats.team_id and xg_team.match_id=team_stats.match_id
left join tournament on tournament.id=match.tournament_id